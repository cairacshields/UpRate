import android.app.ProgressDialog;
import android.content.Intent;
import android.provider.ContactsContract;
import android.support.annotation.NonNull;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Patterns;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.firebase.client.Firebase;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

public class MainActivity extends AppCompatActivity implements View.OnClickListener {
    //Get reference to database
    FirebaseDatabase database = FirebaseDatabase.getInstance();

    EditText name, Memail, password, Cpassword;

    public ProgressDialog pd;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        //Initialize Firebase
        Firebase.setAndroidContext(this);
        
        //Get Views
        TextView existingUser = (TextView)findViewById(R.id.existingUser);
        name = (EditText) findViewById(R.id.nameET);
        Memail = (EditText) findViewById(R.id.emailET);
        password = (EditText) findViewById(R.id.passwordET);
        Cpassword = (EditText)findViewById(R.id.CpasswordET);
        Button CAButton = (Button) findViewById(R.id.CAButton);
        
        //Set Listeners
        CAButton.setOnClickListener(this);
        existingUser.setOnClickListener(this);

    }


    @Override
    public void onClick(View view) {
        //Create a progress dialog to notify user of current events
        ProgressDialog pd = new ProgressDialog(MainActivity.this);
        pd.setTitle("Loading");
        pd.setMessage("Creating Account...");
        switch (view.getId()) {
            case R.id.CAButton:
                //Call method to create and save our new user
                createNewUser();
                pd.show();
                break;
            case R.id.existingUser:
              //Send existing users to login page and set appropriate flags
                Intent i = new Intent(MainActivity.this, Login.class);
                i.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);
                startActivity(i);
                break;
        }
    }

    // Beginning of methods used to check credentials
    private boolean isValidEmail(String email){
        // Makes sure email is not null and that it is an actual email address (Use android patterns)
        boolean isGoodEmail = (email != null && Patterns.EMAIL_ADDRESS.matcher(email).matches());
        if (!isGoodEmail){

            Memail.setError("Please enter a valid email address!");
            return false;
        }
        return isGoodEmail;
    }

    private boolean isValidName(String Mname){
        if (Mname.equals("")){
            name.setError("Please enter your name!");
            return false;
        }
        return true;
    }

    private boolean isValidPassword(String Mpassword, String MConfirmpassword){
        if (Mpassword.length()<6){
            password.setError("Please create a password longer than 6 characters");
            return false;
        }else if (!Mpassword.equals(MConfirmpassword)){
            password.setError("Passwords do not match!");
            return false;
        }
        return true;
    }

    //End of methods used to check credentials

    //Method to save user to our database
    public void saveUser(){
        DatabaseReference myRef = database.getReference("Users");
        String userName = name.getText().toString().trim();
        String userEmail = Memail.getText().toString().trim();

      //Use our POJO class to create a new user object and send serialized to Firebase 
        User user = new User(userName, userEmail);
        myRef.push().setValue(user);
        Toast.makeText(MainActivity.this, "User saved in Database!", Toast.LENGTH_LONG).show();
    }



    public void createNewUser() {
        String userName = name.getText().toString().trim();
        String userEmail = Memail.getText().toString().trim();
        String userPassword = password.getText().toString().trim();
        String userCPassword = Cpassword.getText().toString().trim();

        FirebaseAuth mAuth = FirebaseAuth.getInstance();

        //Run a check for valid credentials before creating a new user
        boolean validEmails = isValidEmail(userEmail) ;
        boolean validName = isValidName(userName);
        boolean validPassword = isValidPassword(userPassword, userCPassword);
        if (!validEmails ||!validName || !validPassword ) return;

            mAuth.createUserWithEmailAndPassword(userEmail, userPassword)
                    .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                        @Override
                        public void onComplete(@NonNull Task<AuthResult> task) {
                        //Save our users by calling the proper method 
                            saveUser();
                            Toast.makeText(MainActivity.this, "Account Registration complete!", Toast.LENGTH_LONG).show();
                        //Send them to the home page after registration complete 
                            Intent i = new Intent(MainActivity.this, Home.class);
                            i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
                            startActivity(i);

                            if (!task.isSuccessful()) {
                            
                            //Need to add some other functions here if registration is not Successful
                                Toast.makeText(MainActivity.this, "Account Registration Failed!", Toast.LENGTH_LONG).show();
                            }
                        }
                    });

        }

}
